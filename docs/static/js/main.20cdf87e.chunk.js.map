{"version":3,"sources":["view/components/sidebar.js","view/components/pagedisplay.js","view/app.js","model/index.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","model","state","loginBox","this","loginInfo","className","onClick","logOut","loginError","autoFocus","type","onKeyDown","event","setState","key","checkLoginPassword","target","value","password","logIn","catch","err","page","hidden","children","name","map","p","renderMenuItem","protected","active","goTo","url","id","pages","alt","src","slice","renderLoginBox","document","title","window","history","pushState","checkPagesActivation","React","Component","observer","$","jQuery","require","PageDisplay","activePage","activePageContent","dangerouslySetInnerHTML","__html","MathJax","typeset","tooltip","mathJax","bootstrapToolTips","App","pages_config","makeObservable","observable","action","loadActivePage","setActivePageContent","computed","onpopstate","e","errMsg","text","replace","match","p1","pageInfo","urlRoot","axios","get","then","response","data","CryptoJS","AES","decrypt","toString","enc","Utf8","console","log","generateErrorPage","latexReplace","marked","loadMarkdownFilePage","loadHTMLFilePage","content","path","location","hash","checkPagesFn","checkFn","getActivePageFromPagesFn","getActivePageFromPageFn","Promise","resolve","reject","decryptedString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Model","getElementById"],"mappings":"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","file":"static/js/main.20cdf87e.chunk.js","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport './sidebar.scss';\n\nclass Sidebar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.state = {\n      loginBox: false\n    };\n  }\n\n  renderLoginBox() {\n    if (this.model.loginInfo) {\n      return <div className=\"login-box\" onClick={() => this.model.logOut()}>\n        Sign out\n      </div>\n    }\n\n    if (this.state.loginBox) {\n      return <div className=\"login-box\">\n        {this.state.loginError ? <div className=\"login-error\">{this.state.loginError}</div> : null}\n        <input \n          autoFocus \n          type=\"password\"\n          onKeyDown={event => {\n            this.setState({loginError: null});\n              if (event.key === 'Enter') {\n                this.checkLoginPassword(event.target.value);\n              } else if (event.key === 'Escape') {\n                this.setState({loginBox: false});\n              }\n            }\n          }\n        />\n      </div>\n    }\n\n    return <div className=\"login-box\" onClick={() => this.setState({loginBox: true})}>\n      Sign in\n    </div>;\n  }\n\n  checkLoginPassword(password) {\n    this.model.logIn(password).catch(err => {\n      this.setState({loginError: err});\n    })\n  }\n\n  renderMenuItem(page) {\n    if (page.hidden) {\n      return null;\n    }\n    if (page.children) {\n      return <div key={page.name}>\n        <div className=\"menu-parent-item\">{page.name}</div>\n        <div className=\"menu-children\">\n          {page.children.map(p => this.renderMenuItem(p))}\n        </div>\n      </div>\n    } else {\n      if (!this.model.loginInfo && page.protected) {\n        return null;\n      }\n      return <div \n          key={page.url}\n          className={'menu-item' + (page.active ? ' active' : '')}\n          onClick={() => this.goTo(page)}\n        >\n          {page.name}\n      </div>; \n    }\n  }\n  \n  render() {\n    return (\n      <div id=\"sidebar\">\n        <h1 className=\"title\" onClick={() => this.goTo(this.model.pages[0])}>\n          <img alt=\"EpiPolicy\" className=\"title-logo\" src=\"logo512.png\" /> EpiPolicy\n        </h1>\n        <div className=\"menu\">\n          {this.model.pages.slice(1).map(p => this.renderMenuItem(p))}\n        </div>\n        {this.renderLoginBox()}\n      </div>\n    );\n  }\n\n  goTo(page) {\n    document.title = page.name;\n    window.history.pushState({url: '#' + page.url}, page.name, '#' + page.url);\n    this.model.checkPagesActivation();\n  }\n\n\n}\n\nexport default observer(Sidebar);\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport './pagedisplay.scss';\nimport $ from 'jquery';\n\n// Bootstrap initialization\nwindow.$ = $;\nwindow.jQuery = $;\nrequire('bootstrap');\n\nclass PageDisplay extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n  }\n\n  render() {\n    if (!this.model.activePage || !this.model.activePageContent) {\n      return null;\n    }\n    return (\n      <div id=\"page-display\" className={this.model.activePage['no-padding'] ? 'no-padding' : ''}>\n        {this.model.activePage['hide-title'] ? null : <h2>{this.model.activePage.name}</h2>}\n        <div\n          id=\"page-content\"\n          dangerouslySetInnerHTML={{__html: this.model.activePageContent}}>\n        </div>\n      </div>\n    );\n  }\n\n  mathJax() {\n    window.MathJax.typeset();\n  }\n\n  bootstrapToolTips() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componendDidMount() {\n    this.mathJax();\n    this.bootstrapToolTips();\n  }\n\n  componentDidUpdate() {\n    this.mathJax();\n    this.bootstrapToolTips();\n  }\n\n}\n\nexport default observer(PageDisplay);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport './app.scss';\nimport Sidebar from './components/sidebar';\nimport PageDisplay from './components/pagedisplay';\n\nclass App extends React.Component {\n\n  render() {\n    return <div id=\"app\">\n      <div id=\"sidebar-container\">\n        <Sidebar model={this.props.model} />\n      </div>\n      <div id=\"main-panel-container\">\n        <PageDisplay model={this.props.model} />\n      </div>\n    </div>;\n  }\n\n}\n\nexport default observer(App);\n","import { makeObservable, observable, computed, action } from 'mobx';\nimport pages_config from \"../pages.json\";\nimport axios from 'axios';\nimport marked from 'marked';\nimport CryptoJS from 'crypto-js';\n\nlet PASSWORD_CONTROL_STRING = 'salimmo sù, el primo e io secondo,\\ntanto ch’i’ vidi de le cose belle\\nche porta ’l ciel, per un pertugio tondo.\\nE quindi uscimmo a riveder le stelle.';\n\nclass Model {\n  pages = pages_config;\n  activePageContent = null;\n  loginInfo = null;\n\n  generateErrorPage(errMsg) {\n    return '<div className=\"error\">' + errMsg +'</div>';\n  } \n\n  latexReplace(text) {\n    text = text.replace(/<latex>(.*?)<\\/latex>/g, \n      (match, p1) => '<div class=\"latex\">$' + p1 + '$</div>');\n    text = text.replace(/<latex-line>(.*?)<\\/latex-line>/g, \n      (match, p1) => '<div class=\"latex latex-line>$$' + p1 + '$$</div>');\n    text = text.replace(/<latex-line-left>(.*?)<\\/latex-line-left>/g, \n      (match, p1) => '<div class=\"latex latex-line latex-line-left\">$$' + p1 + '$$</div>');\n    return text;\n  }\n\n  loadMarkdownFilePage(pageInfo) {\n    let urlRoot = pageInfo.protected ? 'private-pages/' : 'pages/';\n    axios.get(urlRoot + pageInfo['markdown-file'])\n      .then(response => {\n        let data = response.data;\n        if (pageInfo.protected) {\n          if (this.loginInfo) {\n            try {\n              let decrypted = CryptoJS.AES.decrypt(response.data, this.loginInfo.password);\n              data = decrypted.toString(CryptoJS.enc.Utf8);\n              console.log(data)\n            } catch (err) {\n              this.setActivePageContent(this.generateErrorPage(err));\n            }\n          } else {\n            this.setActivePageContent(this.generateErrorPage('Login needed in order to decrypt this file'));\n          }\n        }\n        this.setActivePageContent(this.latexReplace(marked(data)));\n      })\n      .catch(err => {\n        this.setActivePageContent(this.generateErrorPage(err));\n      });\n  }\n\n  loadHTMLFilePage(pageInfo) {\n    axios.get('html-pages/' + pageInfo['html-file'])\n      .then(response => {\n        this.setActivePageContent(response.data);\n      })\n      .catch(err => {\n        this.setActivePageContent(err);\n      });\n  }\n\n  loadActivePage() {\n    if (!this.activePage) {\n      return null;\n    } else if (this.activePage['markdown-file']) {\n      this.loadMarkdownFilePage(this.activePage);\n    } else if (this.activePage['html-file']) {\n      this.loadHTMLFilePage(this.activePage);\n    }\n  }\n\n  setActivePageContent(content) {\n    this.activePageContent = content;\n  }\n\n  checkPagesActivation() {\n    const path = window.location.hash.slice(1);\n    let checkPagesFn = pages => {\n      for (let page of pages) {  \n        checkFn(page);\n      }\n    }\n    let checkFn = page => {\n      if (page.children) {\n        checkPagesFn(page.children);\n      }\n      page.active = path === page.url;\n    }\n    checkPagesFn(this.pages);\n    this.setActivePageContent(null);\n    this.loadActivePage();\n  }\n\n  get activePage() {\n    let getActivePageFromPagesFn = pages => {\n      for (let page of pages) {\n        let activePage = getActivePageFromPageFn(page);\n        if (activePage) return activePage;\n      }\n    }\n    let getActivePageFromPageFn = page => {\n      if (page.children) {\n        return getActivePageFromPagesFn(page.children);\n      }\n      if (page.active) return page;\n    }\n\n    let activePage = getActivePageFromPagesFn(this.pages);\n    return activePage;\n  }\n\n  logIn(password) {\n    return new Promise((resolve, reject) => {\n      axios.get('private-pages/main.pmd')\n      .then(response => {\n        try {\n          let decrypted = CryptoJS.AES.decrypt(response.data, password);\n          let decryptedString = decrypted.toString(CryptoJS.enc.Utf8);\n          console.log('login check. decrypted:\\n' + decryptedString);\n          if (PASSWORD_CONTROL_STRING === decryptedString) {\n            this.loginInfo = {\n              password: password,\n            }\n          } else {\n            this.loginInfo = null;\n          }\n          resolve();\n        } catch (err) {\n          reject('Login failed');\n        }\n      });\n    });\n  }\n\n  logOut() {\n    this.loginInfo = null;\n  }\n\n  constructor() {\n    makeObservable(this, {\n      pages: observable,\n      checkPagesActivation: action,\n      loginInfo: observable,\n      logIn: action,\n      logOut: action,\n      activePageContent: observable,\n      loadActivePage: action,\n      setActivePageContent: action,\n      activePage: computed\n    });\n\n    this.checkPagesActivation();\n    window.onpopstate = e => {\n      this.checkPagesActivation();\n    };\n  }\n\n}\n\nexport default new Model();\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './view/app';\nimport Model from './model';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App model={Model}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}