{"version":3,"sources":["view/components/sidebar.js","view/components/page-navbar.js","view/components/pagedisplay.js","view/app.js","model/index.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","model","state","loginBox","this","loginInfo","className","onClick","logOut","loginError","autoFocus","type","onKeyDown","event","setState","key","checkLoginPassword","target","value","password","logIn","catch","err","page","hidden","children","name","map","p","renderMenuItem","protected","active","goTo","url","id","pages","alt","src","slice","renderLoginBox","document","title","window","history","pushState","checkPagesActivation","React","Component","observer","PageNavbar","activePageHeaders","h","i","activePageVisibleHeader","tagname","href","caption","$","jQuery","bootstrap","require","PageDisplay","pageDisplayRef","createRef","activePage","activePageContent","ref","dangerouslySetInnerHTML","__html","MathJax","typeset","tooltip","mathJax","bootstrapToolTips","querySelectorAll","forEach","el","hljs","highlightElement","headers","header","push","innerText","tagName","setActivePageHeaders","getElementById","scrollIntoView","behavior","App","mainPanelContainerRef","mostVisibleHeader","visibleHeaders","lastVisibleHeader","current","scrollTop","querySelector","rect","getBoundingClientRect","bottom","innerHeight","length","height","top","setActivePageVisibleHeader","updateVisibleHeader","onScroll","e","onPageContentChanged","marked","setOptions","renderer","Renderer","highlight","code","lang","language","getLanguage","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","pages_config","makeObservable","observable","action","loadActivePage","setActivePageContent","computed","onpopstate","errMsg","text","replace","match","p1","md","latexReplace","pageInfo","urlRoot","axios","get","then","response","data","CryptoJS","AES","decrypt","toString","enc","Utf8","console","log","generateErrorPage","markdownToHTML","loadMarkdownFilePage","loadHTMLFilePage","content","headerID","path","location","pathname","hash","undefined","checkPagesFn","checkFn","getActivePageFromPagesFn","getActivePageFromPageFn","Promise","resolve","reject","decryptedString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Model"],"mappings":"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","file":"static/js/main.2065254b.chunk.js","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport './sidebar.scss';\n\nclass Sidebar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.state = {\n      loginBox: false\n    };\n  }\n\n  renderLoginBox() {\n    if (this.model.loginInfo) {\n      return <div className=\"login-box\" onClick={() => this.model.logOut()}>\n        Sign out\n      </div>\n    }\n\n    if (this.state.loginBox) {\n      return <div className=\"login-box\">\n        {this.state.loginError ? <div className=\"login-error\">{this.state.loginError}</div> : null}\n        <input \n          autoFocus \n          type=\"password\"\n          onKeyDown={event => {\n            this.setState({loginError: null});\n              if (event.key === 'Enter') {\n                this.checkLoginPassword(event.target.value);\n              } else if (event.key === 'Escape') {\n                this.setState({loginBox: false});\n              }\n            }\n          }\n        />\n      </div>\n    }\n\n    return <div className=\"login-box\" onClick={() => this.setState({loginBox: true})}>\n      Sign in\n    </div>;\n  }\n\n  checkLoginPassword(password) {\n    this.model.logIn(password).catch(err => {\n      this.setState({loginError: err});\n    })\n  }\n\n  renderMenuItem(page) {\n    if (page.hidden) {\n      return null;\n    }\n    if (page.children) {\n      return <div key={page.name}>\n        <div className=\"menu-parent-item\">{page.name}</div>\n        <div className=\"menu-children\">\n          {page.children.map(p => this.renderMenuItem(p))}\n        </div>\n      </div>\n    } else {\n      if (!this.model.loginInfo && page.protected) {\n        return null;\n      }\n      return <div \n          key={page.url}\n          className={'menu-item' + (page.active ? ' active' : '')}\n          onClick={() => this.goTo(page)}\n        >\n          {page.name}\n      </div>; \n    }\n  }\n  \n  render() {\n    return (\n      <div id=\"sidebar\">\n        <h1 className=\"title\" onClick={() => this.goTo(this.model.pages[0])}>\n          <img alt=\"EpiPolicy\" className=\"title-logo\" src=\"logo512.png\" /> EpiPolicy\n        </h1>\n        <div className=\"menu\">\n          {this.model.pages.slice(1).map(p => this.renderMenuItem(p))}\n        </div>\n        {this.renderLoginBox()}\n      </div>\n    );\n  }\n\n  goTo(page) {\n    document.title = page.name;\n    window.history.pushState({url: '/' + page.url}, page.name, '/' + page.url);\n    this.model.checkPagesActivation();\n  }\n\n\n}\n\nexport default observer(Sidebar);\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport './page-navbar.scss';\n\nclass PageNavbar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n  }\n\n  render() {\n    return (\n      <div id=\"page-navbar-container\">\n        <nav id=\"page-navbar\" className=\"navbar navbar-light bg-light flex-column align-items-stretch p-3\">\n          <nav className=\"nav nav-pills flex-column\">\n            {this.props.model.activePageHeaders.map((h, i) => \n              <a key={h.id} \n                 className={\n                   \"nav-link\" + \n                   (\n                     (!this.props.model.activePageVisibleHeader && i === 0) \n                     || (this.props.model.activePageVisibleHeader === h.id)\n                      ? ' active' : ''\n                   ) + \n                   ' ' + h.tagname\n                  } \n                 href={'#' + h.id}>\n                {h.caption}\n              </a>\n            )}\n          </nav>\n        </nav>\n      </div>\n    );\n  }\n\n}\n\nexport default observer(PageNavbar);\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport './pagedisplay.scss';\nimport 'highlight.js/scss/github.scss';\nimport $ from 'jquery';\nimport hljs from 'highlight.js';\nimport PageNavbar from './page-navbar';\n\n// Bootstrap initialization\nwindow.$ = $;\nwindow.jQuery = $;\nlet bootstrap = require('bootstrap');\nwindow.bootstrap = bootstrap;\n\nclass PageDisplay extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.pageDisplayRef = React.createRef();\n  }\n\n  render() {\n    if (!this.model.activePage || !this.model.activePageContent) {\n      return null;\n    }\n    return (\n      <div id=\"page-display\"\n           ref={this.pageDisplayRef}\n           className={this.model.activePage['no-padding'] ? 'no-padding' : ''}>\n        {this.model.activePage['hide-title'] ? null : <h1>{this.model.activePage.name}</h1>}\n        <div id=\"page-content\" dangerouslySetInnerHTML={{__html: this.model.activePageContent}}></div>\n        {!this.model.activePage['hide-page-navbar'] && <PageNavbar model={this.model} />}\n      </div>\n    );\n  }\n\n  mathJax() {\n    window.MathJax.typeset();\n  }\n\n  bootstrapToolTips() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componentDidUpdate() {\n    this.mathJax();\n    this.bootstrapToolTips();\n    \n    document.querySelectorAll('#page-content pre code').forEach(el => {\n      hljs.highlightElement(el);\n    });\n    \n    let headers = [];\n    document.querySelectorAll('h2, h3, h4, h5').forEach(header => {\n      headers.push({id: header.id, caption: header.innerText, tagname: header.tagName});\n    });\n    this.model.setActivePageHeaders(headers);\n\n    let header = document.getElementById(this.props.model.activePageVisibleHeader);\n    if (header) header.scrollIntoView({behavior: 'smooth'});\n\n    // this.props.onPageContentChanged();\n  }\n\n}\n\nexport default observer(PageDisplay);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport './app.scss';\nimport Sidebar from './components/sidebar';\nimport PageDisplay from './components/pagedisplay';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.mainPanelContainerRef = React.createRef();\n  }\n\n  updateVisibleHeader() {\n    let mostVisibleHeader = null;\n    let visibleHeaders = [];\n    let lastVisibleHeader = null;\n    if (this.mainPanelContainerRef.current.scrollTop === 0) {\n      mostVisibleHeader = this.mainPanelContainerRef.current.querySelector('h2, h3, h4, h5, h6');\n    } else {\n\n      this.mainPanelContainerRef.current.querySelectorAll('h2, h3, h4, h5, h6').forEach(h => {\n        let rect = h.getBoundingClientRect();\n        if (rect.bottom <= window.innerHeight && rect.bottom > 0) {\n          if (visibleHeaders.length > 0) {\n            visibleHeaders[visibleHeaders.length - 1].height -= window.innerHeight - rect.top;\n          }\n          visibleHeaders.push({id: h.id, height: window.innerHeight - rect.bottom});\n        }\n        if (lastVisibleHeader === null || rect.top < window.innerHeight) {\n          lastVisibleHeader = h;\n        }\n      });\n\n      for (let h of visibleHeaders) {\n        if (mostVisibleHeader == null || mostVisibleHeader.height < h.height) {\n            mostVisibleHeader = h;\n        }\n      }\n\n      if (mostVisibleHeader === null) {\n        mostVisibleHeader = lastVisibleHeader;\n      }\n\n    }\n\n    this.props.model.setActivePageVisibleHeader(mostVisibleHeader ? mostVisibleHeader.id : null);\n  }\n\n  componentDidMount() {\n    this.updateVisibleHeader();\n  }\n\n  render() {\n    return <div id=\"app\">\n      <div id=\"sidebar-container\" \n           className={this.props.model.activePage['hide-sidebar'] ? 'hide-sidebar' : ''}\n      >\n        <Sidebar model={this.props.model} />\n      </div>\n      <div id=\"main-panel-container\" \n           className={this.props.model.activePage['hide-sidebar'] ? 'hide-sidebar' : ''}\n           ref={this.mainPanelContainerRef}\n           onScroll={e => this.updateVisibleHeader()}>\n        <PageDisplay model={this.props.model} onPageContentChanged={() => this.updateVisibleHeader()}/>\n      </div>\n    </div>;\n  }\n\n}\n\nexport default observer(App);\n","import { makeObservable, observable, computed, action } from 'mobx';\nimport pages_config from \"../pages.json\";\nimport axios from 'axios';\nimport marked from 'marked';\nimport CryptoJS from 'crypto-js';\nimport hljs from 'highlight.js';\n\nlet PASSWORD_CONTROL_STRING = 'salimmo sù, el primo e io secondo,\\ntanto ch’i’ vidi de le cose belle\\nche porta ’l ciel, per un pertugio tondo.\\nE quindi uscimmo a riveder le stelle.';\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  highlight: function(code, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(code, { language }).value;\n  },\n  pedantic: false,\n  gfm: true,\n  breaks: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  xhtml: false\n});\n\nclass Model {\n  pages = pages_config;\n  activePageContent = null;\n  activePageHeaders = [];\n  loginInfo = null;\n  activePageVisibleHeader = null;\n\n  generateErrorPage(errMsg) {\n    return '<div className=\"error\">' + errMsg +'</div>';\n  } \n\n  latexReplace(text) {\n    text = text.replace(/<tex>(.+?)<\\/tex>/g, \n      (match, p1) => '<span class=\"tex\">$' + p1 + '$</span>');\n    return text;\n  }\n\n  markdownToHTML(md) {\n    md = marked(md);\n    md = this.latexReplace(md);\n    return md;\n  } \n\n  loadMarkdownFilePage(pageInfo) {\n    let urlRoot = pageInfo.protected ? 'private-pages/' : 'pages/';\n    axios.get(urlRoot + pageInfo['markdown-file'])\n      .then(response => {\n        let data = response.data;\n        if (pageInfo.protected) {\n          if (this.loginInfo) {\n            try {\n              let decrypted = CryptoJS.AES.decrypt(response.data, this.loginInfo.password);\n              data = decrypted.toString(CryptoJS.enc.Utf8);\n              console.log(data)\n            } catch (err) {\n              this.setActivePageContent(this.generateErrorPage(err));\n            }\n          } else {\n            this.setActivePageContent(this.generateErrorPage('Login needed in order to decrypt this file'));\n          }\n        }\n        this.setActivePageContent(this.markdownToHTML(data));\n      })\n      .catch(err => {\n        this.setActivePageContent(this.generateErrorPage(err));\n      });\n  }\n\n  loadHTMLFilePage(pageInfo) {\n    axios.get('html-pages/' + pageInfo['html-file'])\n      .then(response => {\n        this.setActivePageContent(response.data);\n      })\n      .catch(err => {\n        this.setActivePageContent(err);\n      });\n  }\n\n  loadActivePage() {\n    if (!this.activePage) {\n      return null;\n    } else if (this.activePage['markdown-file']) {\n      this.loadMarkdownFilePage(this.activePage);\n    } else if (this.activePage['html-file']) {\n      this.loadHTMLFilePage(this.activePage);\n    }\n  }\n\n  setActivePageContent(content) {\n    this.activePageContent = content;\n  }\n\n  setActivePageHeaders(headers) {\n    this.activePageHeaders = headers;\n  }\n\n  setActivePageVisibleHeader(headerID) {\n    this.activePageVisibleHeader = headerID;\n  } \n\n  checkPagesActivation() {\n    const path = window.location.pathname.slice(1);\n\n    const hash = window.location.hash ? window.location.hash.slice(1) : undefined;\n    if (hash) {\n      this.setActivePageVisibleHeader(hash);\n    }\n\n    let checkPagesFn = pages => {\n      for (let page of pages) {  \n        checkFn(page);\n      }\n    }\n    let checkFn = page => {\n      if (page.children) {\n        checkPagesFn(page.children);\n      }\n      page.active = path === page.url;\n    }\n    checkPagesFn(this.pages);\n    this.setActivePageContent(null);\n    this.loadActivePage();\n  }\n\n  get activePage() {\n    let getActivePageFromPagesFn = pages => {\n      for (let page of pages) {\n        let activePage = getActivePageFromPageFn(page);\n        if (activePage) return activePage;\n      }\n    }\n    let getActivePageFromPageFn = page => {\n      if (page.children) {\n        return getActivePageFromPagesFn(page.children);\n      }\n      if (page.active) return page;\n    }\n\n    let activePage = getActivePageFromPagesFn(this.pages);\n    return activePage;\n  }\n\n  logIn(password) {\n    return new Promise((resolve, reject) => {\n      axios.get('private-pages/main.pmd')\n      .then(response => {\n        try {\n          let decrypted = CryptoJS.AES.decrypt(response.data, password);\n          let decryptedString = decrypted.toString(CryptoJS.enc.Utf8);\n          console.log('login check. decrypted:\\n' + decryptedString);\n          if (PASSWORD_CONTROL_STRING === decryptedString) {\n            this.loginInfo = {\n              password: password,\n            }\n          } else {\n            this.loginInfo = null;\n          }\n          resolve();\n        } catch (err) {\n          reject('Login failed');\n        }\n      });\n    });\n  }\n\n  logOut() {\n    this.loginInfo = null;\n  }\n\n  constructor() {\n    makeObservable(this, {\n      pages: observable,\n      checkPagesActivation: action,\n      loginInfo: observable,\n      logIn: action,\n      logOut: action,\n      activePageContent: observable,\n      activePageHeaders: observable,\n      loadActivePage: action,\n      setActivePageContent: action,\n      setActivePageHeaders: action,\n      setActivePageVisibleHeader: action,\n      activePageVisibleHeader: observable,\n      activePage: computed\n    });\n\n    this.checkPagesActivation();\n    window.onpopstate = e => {\n      this.checkPagesActivation();\n    };\n  }\n\n}\n\nexport default new Model();\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './view/app';\nimport Model from './model';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App model={Model}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}